Program([ClassDef2Definition(ClassDef("Vector","object",ClassBodyMembers2ClassBody([VarDef2ClassBodyMember(VarDef(TypedVar("items",ListType(Type("int"))),NONE())),VarDef2ClassBodyMember(VarDef(TypedVar("size",Type("int")),Int("0"))),FuncDef2ClassBodyMember(FuncDef("__init__",[TypedVar("self",TypeS(IdString("Vector")))],ReturnsNone(),FuncBody([],[Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"items")))],List([Literal2Exp(Int("0"))]))]))),FuncDef2ClassBodyMember(FuncDef("capacity",[TypedVar("self",TypeS(IdString("Vector")))],Returns(Type("int")),FuncBody([],[Return(Call(Var2Exp(Var("len")),Exps2Parameters([Member2Exp(Member(Var2Exp(Var("self")),"items"))])))]))),FuncDef2ClassBodyMember(FuncDef("increase_capacity",[TypedVar("self",TypeS(IdString("Vector")))],Returns(Type("int")),FuncBody([],[Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"items")))],Add(Member2Exp(Member(Var2Exp(Var("self")),"items")),List([Literal2Exp(Int("0"))]))),Return(Call(Member2Exp(Member(Var2Exp(Var("self")),"capacity")),Exps2Parameters([])))]))),FuncDef2ClassBodyMember(FuncDef("append",[TypedVar("self",TypeS(IdString("Vector"))),TypedVar("item",Type("int"))],Returns(Type("object")),FuncBody([],[If(Eq(Member2Exp(Member(Var2Exp(Var("self")),"size")),Call(Member2Exp(Member(Var2Exp(Var("self")),"capacity")),Exps2Parameters([]))),Block([Exp(Call(Member2Exp(Member(Var2Exp(Var("self")),"increase_capacity")),Exps2Parameters([])))])),Assign([Target(Index2Target(Index(Member2Exp(Member(Var2Exp(Var("self")),"items")),Member2Exp(Member(Var2Exp(Var("self")),"size")))))],Var2Exp(Var("item"))),Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"size")))],Add(Member2Exp(Member(Var2Exp(Var("self")),"size")),Literal2Exp(Int("1"))))]))),FuncDef2ClassBodyMember(FuncDef("append_all",[TypedVar("self",TypeS(IdString("Vector"))),TypedVar("new_items",ListType(Type("int")))],Returns(Type("object")),FuncBody([VarDef2FuncBodyMember(VarDef(TypedVar("item",Type("int")),Int("0")))],[For("item",Var2Exp(Var("new_items")),Block([Exp(Call(Member2Exp(Member(Var2Exp(Var("self")),"append")),Exps2Parameters([Var2Exp(Var("item"))])))]))]))),FuncDef2ClassBodyMember(FuncDef("remove_at",[TypedVar("self",TypeS(IdString("Vector"))),TypedVar("idx",Type("int"))],Returns(Type("object")),FuncBody([],[If(Lt(Var2Exp(Var("idx")),Literal2Exp(Int("0"))),Block([ReturnNone()])),While(Lt(Var2Exp(Var("idx")),Sub(Member2Exp(Member(Var2Exp(Var("self")),"size")),Literal2Exp(Int("1")))),Block([Assign([Target(Index2Target(Index(Member2Exp(Member(Var2Exp(Var("self")),"items")),Var2Exp(Var("idx")))))],Index2Exp(Index(Member2Exp(Member(Var2Exp(Var("self")),"items")),Add(Var2Exp(Var("idx")),Literal2Exp(Int("1")))))),Assign([Target(Var2Target(Var("idx")))],Add(Var2Exp(Var("idx")),Literal2Exp(Int("1"))))])),Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"size")))],Sub(Member2Exp(Member(Var2Exp(Var("self")),"size")),Literal2Exp(Int("1"))))]))),FuncDef2ClassBodyMember(FuncDef("get",[TypedVar("self",TypeS(IdString("Vector"))),TypedVar("idx",Type("int"))],Returns(Type("int")),FuncBody([],[Return(Index2Exp(Index(Member2Exp(Member(Var2Exp(Var("self")),"items")),Var2Exp(Var("idx")))))]))),FuncDef2ClassBodyMember(FuncDef("length",[TypedVar("self",TypeS(IdString("Vector")))],Returns(Type("int")),FuncBody([],[Return(Member2Exp(Member(Var2Exp(Var("self")),"size")))])))]))),ClassDef2Definition(ClassDef("DoublingVector","Vector",ClassBodyMembers2ClassBody([VarDef2ClassBodyMember(VarDef(TypedVar("doubling_limit",Type("int")),Int("1000"))),FuncDef2ClassBodyMember(FuncDef("increase_capacity",[TypedVar("self",TypeS(IdString("DoublingVector")))],Returns(Type("int")),FuncBody([],[IfElse(Leq(Call(Member2Exp(Member(Var2Exp(Var("self")),"capacity")),Exps2Parameters([])),IntDiv(Member2Exp(Member(Var2Exp(Var("self")),"doubling_limit")),Literal2Exp(Int("2")))),Block([Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"items")))],Add(Member2Exp(Member(Var2Exp(Var("self")),"items")),Member2Exp(Member(Var2Exp(Var("self")),"items"))))]),Else(Block([Assign([Target(Member2Target(Member(Var2Exp(Var("self")),"items")))],Add(Member2Exp(Member(Var2Exp(Var("self")),"items")),List([Literal2Exp(Int("0"))])))]))),Return(Call(Member2Exp(Member(Var2Exp(Var("self")),"capacity")),Exps2Parameters([])))])))]))),FuncDef2Definition(FuncDef("vrange",[TypedVar("i",Type("int")),TypedVar("j",Type("int"))],Returns(Type("Vector")),FuncBody([VarDef2FuncBodyMember(VarDef(TypedVar("v",Type("Vector")),NONE()))],[Assign([Target(Var2Target(Var("v")))],Call(Var2Exp(Var("DoublingVector")),Exps2Parameters([]))),While(Lt(Var2Exp(Var("i")),Var2Exp(Var("j"))),Block([Exp(Call(Member2Exp(Member(Var2Exp(Var("v")),"append")),Exps2Parameters([Var2Exp(Var("i"))]))),Assign([Target(Var2Target(Var("i")))],Add(Var2Exp(Var("i")),Literal2Exp(Int("1"))))])),Return(Var2Exp(Var("v")))]))),FuncDef2Definition(FuncDef("sieve",[TypedVar("v",Type("Vector"))],Returns(Type("object")),FuncBody([VarDef2FuncBodyMember(VarDef(TypedVar("i",Type("int")),Int("0"))),VarDef2FuncBodyMember(VarDef(TypedVar("j",Type("int")),Int("0"))),VarDef2FuncBodyMember(VarDef(TypedVar("k",Type("int")),Int("0")))],[While(Lt(Var2Exp(Var("i")),Call(Member2Exp(Member(Var2Exp(Var("v")),"length")),Exps2Parameters([]))),Block([Assign([Target(Var2Target(Var("k")))],Call(Member2Exp(Member(Var2Exp(Var("v")),"get")),Exps2Parameters([Var2Exp(Var("i"))]))),Assign([Target(Var2Target(Var("j")))],Add(Var2Exp(Var("i")),Literal2Exp(Int("1")))),While(Lt(Var2Exp(Var("j")),Call(Member2Exp(Member(Var2Exp(Var("v")),"length")),Exps2Parameters([]))),Block([IfElse(Eq(Mod(Call(Member2Exp(Member(Var2Exp(Var("v")),"get")),Exps2Parameters([Var2Exp(Var("j"))])),Var2Exp(Var("k"))),Literal2Exp(Int("0"))),Block([Exp(Call(Member2Exp(Member(Var2Exp(Var("v")),"remove_at")),Exps2Parameters([Var2Exp(Var("j"))])))]),Else(Block([Assign([Target(Var2Target(Var("j")))],Add(Var2Exp(Var("j")),Literal2Exp(Int("1"))))])))])),Assign([Target(Var2Target(Var("i")))],Add(Var2Exp(Var("i")),Literal2Exp(Int("1"))))]))]))),VarDef2Definition(VarDef(TypedVar("n",Type("int")),Int("50"))),VarDef2Definition(VarDef(TypedVar("v",Type("Vector")),NONE())),VarDef2Definition(VarDef(TypedVar("i",Type("int")),Int("0")))],[Assign([Target(Var2Target(Var("v")))],Call(Var2Exp(Var("vrange")),Exps2Parameters([Literal2Exp(Int("2")),Var2Exp(Var("n"))]))),Exp(Call(Var2Exp(Var("sieve")),Exps2Parameters([Var2Exp(Var("v"))]))),While(Lt(Var2Exp(Var("i")),Call(Member2Exp(Member(Var2Exp(Var("v")),"length")),Exps2Parameters([]))),Block([Exp(Call(Var2Exp(Var("print")),Exps2Parameters([Call(Member2Exp(Member(Var2Exp(Var("v")),"get")),Exps2Parameters([Var2Exp(Var("i"))]))]))),Assign([Target(Var2Target(Var("i")))],Add(Var2Exp(Var("i")),Literal2Exp(Int("1"))))]))])